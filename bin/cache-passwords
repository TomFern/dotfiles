#!/usr/bin/env bash
#
# cache some passwords for scripts
# this reduces their but simplifies some scripts
#
# use with caution
#
# only logins listed in the weak file will be cached, so it goes
#

if [ -z "$PASSWORD_STORE_DIR" ]; then
    PASSWORD_STORE_DIR=$HOME/.password-store
fi
CACHEDIR=$HOME/.cache/passwords
MAXAGE=$((60*24*7))

# list of accounts that can be cached
LIST=$(egrep -v '^\s*#' $PASSWORD_STORE_DIR/weak)

function usage() {
cat <<EOF
usage:
    $0 [-f]
EOF
}

function checkout_all() {
    echo "*** checking out all passwords..."
    chmod -R 700 "$CACHEDIR"
    rm -rf "$CACHEDIR"
    mkdir -p "$CACHEDIR"
    if [ -n "$LIST" ]; then
        echo -e "$LIST" | while read id; do
            if [ -n "$id" ]; then
                echo "    $id"
                mkdir -p $(dirname "$CACHEDIR"/$id)
                pass $id > "$CACHEDIR"/$id
            fi
        done 
    fi
    chmod -R 500 "$CACHEDIR"
}

force=
while getopts ":fh" o; do
  case $o in
    f)
        force=1
        ;;
    h)
        usage
        exit 0
        ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
    esac
done
shift $((OPTIND-1))

if [ -n "$force" ] || [ ! -d "$CACHEDIR" ] || [ -z "$(find $CACHEDIR -type f -cmin -${MAXAGE})" ]; then
    checkout_all
fi

