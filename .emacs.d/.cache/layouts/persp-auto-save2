;; -*- mode: emacs-lisp; eval: (progn (pp-buffer) (indent-buffer)) -*-
((def-persp nil ((def-buffer ".spacemacs" "/home/pablo/.spacemacs" emacs-lisp-mode) (def-buffer "doc-netlify-deployment.org" "/home/pablo/doc-netlify-deployment.org" org-mode) (def-buffer "doc-netlify-deployment.md" "/home/pablo/doc-netlify-deployment.md" markdown-mode) (def-buffer "python-continous-intergration-and-delivery-an-introduction.org" "/home/pablo/jobs/upwork/plume/python-continous-intergration-and-delivery-an-introduction.org" org-mode) (def-buffer "django-continuous-integration_5c582def2c7d3a66e32df712.org" "/home/pablo/jobs/upwork/plume/django-continuous-integration_5c582def2c7d3a66e32df712.org" org-mode) (def-buffer "semaphore-demo-ruby-kubernetes-deploy.png" "/home/pablo/jobs/upwork/plume/public/semaphore-demo-ruby-kubernetes-deploy.png" image-mode) (def-buffer "semaphore-demo-ruby-kubernetes-dockerize-ready.png" "/home/pablo/jobs/upwork/plume/public/semaphore-demo-ruby-kubernetes-dockerize-ready.png" image-mode) (def-buffer "aws-iam-create-user-complete.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-user-complete.png" image-mode) (def-buffer "aws-iam-create-user-2.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-user-2.png" image-mode) (def-buffer "aws-iam-create-user-1.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-user-1.png" image-mode) (def-buffer "aws-iam-create-user.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-user.png" image-mode) (def-buffer "semaphore-add-repository-zeit-now.png" "/home/pablo/jobs/upwork/plume/public/semaphore-add-repository-zeit-now.png" image-mode) (def-buffer "aws-cf-worker-nodes-create.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-create.png" image-mode) (def-buffer "aws-cf-worker-nodes-output.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-output.png" image-mode) (def-buffer "aws-cf-worker-nodes-active.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-active.png" image-mode) (def-buffer "aws-cf-worker-nodes-4.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-4.png" image-mode) (def-buffer "aws-cf-worker-nodes-3.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-3.png" image-mode) (def-buffer "aws-cf-worker-nodes-2.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-2.png" image-mode) (def-buffer "aws-cf-worker-nodes-ami-table.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-ami-table.png" image-mode) (def-buffer "aws-cf-worker-nodes-1.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-worker-nodes-1.png" image-mode) (def-buffer "aws-eks-cluster-active.png" "/home/pablo/jobs/upwork/plume/public/aws-eks-cluster-active.png" image-mode) (def-buffer "aws-kes-cluster-active.png" "/home/pablo/jobs/upwork/plume/public/aws-kes-cluster-active.png" fundamental-mode) (def-buffer "aws-eks-networking.png" "/home/pablo/jobs/upwork/plume/public/aws-eks-networking.png" image-mode) (def-buffer "aws-eks-create-cluster.png" "/home/pablo/jobs/upwork/plume/public/aws-eks-create-cluster.png" image-mode) (def-buffer "aws-iam-create-role-name.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-role-name.png" image-mode) (def-buffer "aws-iam-create-role.png" "/home/pablo/jobs/upwork/plume/public/aws-iam-create-role.png" image-mode) (def-buffer "aws-cf-stack-outputs.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-stack-outputs.png" image-mode) (def-buffer "aws-cf-stack-complete.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-stack-complete.png" image-mode) (def-buffer "aws-cf-stack-3.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-stack-3.png" fundamental-mode) (def-buffer "aws-cf-stack-2.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-stack-2.png" image-mode) (def-buffer "aws-cf-stack-1.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-stack-1.png" image-mode) (def-buffer "aws-cf-create-stack.png" "/home/pablo/jobs/upwork/plume/public/aws-cf-create-stack.png" image-mode) (def-buffer "aws-ecr-view-images1" "/home/pablo/jobs/upwork/plume/public/aws-ecr-view-images1" fundamental-mode) (def-buffer "aws-ecr-create-repo.png" "/home/pablo/jobs/upwork/plume/public/aws-ecr-create-repo.png" image-mode) (def-buffer "aws-ecr-view-repo.png" "/home/pablo/jobs/upwork/plume/public/aws-ecr-view-repo.png" image-mode) (def-buffer "image" "/home/pablo/.emacs.d/private/snippets/org-mode/image" snippet-mode) (def-buffer "ci-cd-for-zeit-now.md" "/home/pablo/jobs/upwork/plume/REPOS/writer-tomfern/ci-cd-for-zeit-now.md" markdown-mode) (def-buffer "use-case-zeit-now-ci-cd.md" "/home/pablo/jobs/upwork/plume/REPOS/docs/use-case-zeit-now-ci-cd.md" markdown-mode) (def-buffer "zeit-now-cd.org" "/home/pablo/jobs/upwork/plume/zeit-now-cd.org" org-mode) (def-buffer "zeit-now-deployments-production.png" "/home/pablo/jobs/upwork/plume/public/zeit-now-deployments-production.png" image-mode) (def-buffer "semaphore-zeit-now-ci-cd.png" "/home/pablo/jobs/upwork/plume/public/semaphore-zeit-now-ci-cd.png" image-mode) (def-buffer "semaphore-demo-zeit-now-json.png" "/home/pablo/jobs/upwork/plume/public/semaphore-demo-zeit-now-json.png" image-mode) (def-buffer "zeit-now-deployments-staging.png" "/home/pablo/jobs/upwork/plume/public/zeit-now-deployments-staging.png" image-mode) (def-buffer "pp.org" "/home/pablo/src/org/pp.org" org-mode) (def-buffer "SQL-PABLO.org" "/home/pablo/src/projects/SQL/SQL-PABLO.org" org-mode)) (def-wconf (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 76) (min-pixel-width . 90) (min-pixel-height-ignore . 57) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 19) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 988) (total-width . 213) (total-height . 52) (normal-height . 1.0) (normal-width . 1.0) (buffer ".spacemacs" (selected . t) (hscroll . 0) (fringes 6 6 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 3076) (start . 1829)))) (def-params ((term-eyebrowse-last-slot . 1) (term-eyebrowse-current-slot . 1) (term-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 2) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 4) (min-pixel-width . 10) (min-pixel-height-ignore . 2) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 10) (pixel-height . 10) (total-width . 10) (total-height . 10) (normal-height . 1.0) (normal-width . 1.0) (buffer "*scratch*" (selected . t) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 1) (start . 1))) "")) (gui-eyebrowse-last-slot . 1) (gui-eyebrowse-current-slot . 1) (gui-eyebrowse-window-configs (1 (((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 76) (min-pixel-width . 90) (min-pixel-height-ignore . 57) (min-pixel-width-ignore . 36) (min-pixel-height-safe . 19) (min-pixel-width-safe . 18)) leaf (pixel-width . 1920) (pixel-height . 988) (total-width . 213) (total-height . 52) (normal-height . 1.0) (normal-width . 1.0) (buffer "ci-cd-for-zeit-now.org" (selected . t) (hscroll . 0) (fringes 6 6 nil) (margins nil) (scroll-bars nil 0 t nil 0 t) (vscroll . 0) (dedicated) (point . 4570) (start . 4249))) "")))) t nil nil))